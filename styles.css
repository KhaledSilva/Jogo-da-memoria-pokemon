* {
    padding: 2px 0 0 2px;
    margin: 0;
    box-sizing: border-box;
}

body {
    height: 100vh;
    display: flex;
    align-items: center;
    background-image: url('/img/pokemon-emerald-intro.png');
    background-color: black;
    background-size:110% 110%;
    animation: backgroundTransition 18s ease-in-out infinite;
}

@keyframes backgroundTransition {
    0% {
        background-position: 0% 80%;
    }
    50% {
        background-position: 80% 100%;
    }
    100% {
        background-position: 0% 80%;
    }
}

.memory-game {
    height: 100vh;
    width: 100%;
    margin: auto;
    display: flex;
    flex-wrap: wrap;
    perspective: 1000px;
}

.card {
    height: calc(30.333% - 10px);
    width: calc(12% - 10px);
    margin: 5px;
    position: relative;
    box-shadow: 1px 1px 1px rgba(1, 1, 1, .3);
    cursor: pointer;
    transform: scale(1);
    transform-style: preserve-3d; /*adiciona perspectiva 3d, nao deixa o elemento achatado no plano*/;
    transition: transform .9s; /* adiciona efeito de movimento ao flip do card */
}


.card:active {
    transform: scale(0.97);
    transition: transform .3s;
}

.card-front, .card-back {
    width: 100%;
    height: 100%;
    padding: 20px;
    position: absolute;
    border-radius: 5px;
    background: rgb(241, 241, 247);
    backface-visibility: hidden; /*todo elemento tem uma frente e um verso (ao contrario, como um espelho essa propriedade que retira o verso do elemento*/
}

.card-front {
    transform: rotateY(180deg); /* antes, o verso aparecia transparente, pois ambas as imagens tem position absolute, ao girar no eixo Y, elas ficaram com os versos virados */
}

/* flip card animation */
.card.flip {
    transform: rotateY(180deg);
}

.btn {
    margin: 5px;
    padding: 0px;
    top: 350px;
    line-height: 15px;
    border-radius: 10%;
    border-color: transparent;
    right: 50px;
    position: fixed;
    background-color: transparent;
}

.reset-button {
    height: 20vh;
    width: 10vw;
    border-radius: 10%;
    cursor: pointer;
    opacity: 0.7;

}

.reset-button:hover {
    opacity: unset;
    transform: scale(0.9);
}